from parameters import *
from graphics import AnimationState
class Actor:
    def __init__(self,
                 id,
                 name,
                 sprites,
                 accessories,
                 size = (0,0),
                 position = (0,0),
                 direction = 0,
                 isFocus = False,):
        self.id = id
        self.name = name
        self.sprites = sprites
        self.accessories = accessories
        self.size = size
        self.position = position
        self.direction = direction
        self.isFocus = isFocus

        self.currentSprite = self.sprites['walk']
        self.animationState = AnimationState()
        self.isChanged = False

    def updateAnimation(self):
        pass

    def genImageBuf(self, offsets, renderQ):
        pass


# Class to contain data and actions for a PC.  Actions are added to the object
#     and modified dynamically
# @param actor
class PlayerCharacter:
    def __init__(self, actor = None):
        self.actor = actor #link to the actor player is controlling
                
        #explicitly declare fields
        self.moveSpeed = 8
        self.moveListeners = [] #to check for events generated by touch
        
    def addListener(self, listenerType, listener):
        if listenerType == LISTENER_MOVE:
            self.moveListeners.append(listener)

    def adjustPosition(self, xChange, yChange):
        pos = self.getPosition()
        self.setPosition([pos[0] + xChange, pos[1] + yChange])
        
    def getPosition(self):
        return self.actor.getPosition()
    
    def setPosition(self, position):
        self.actor.setPosition(position)
    
    def getSize(self):
        return self.actor.size
    
    def setDirection(self, direction):
        self.actor.direction = direction
        