PROJECT CharmQuark 
Can re-write render using pyopengl? - seems prudent.  Can learn open gl separately (in C++?) then work on porting to the game
	pygame can still be used for input processing etc

fix the fg visible section off by 1 issue - is making it apper to have glitches
cleanup render all panorama with the CONSTANTS and methodCalls used in renderChanged
make some of the list values class fields for readability
	eg fg.scrolling[0] = fg.scolling_xmultiplier

minor optimizations: 
lists to tuples

minor cleanup:
move related functions next to each other (renderQ functs)
more calculations packaged as functions (eg screenBoundryLeft)

Instead of re-render entire screen on a camera move, can we shift the entire screen and re-render the shifted off part?

update changed actors algorithm to re-render them if on a changed tile

profiling:
	render all panorama: 3ms per call (called twice per render.. 1ms per panorama?)
	render all lower tile: 2 ms per call
	handle events: 1 ms per call (seems high, is it the render box?)
	render all upper tile: <1ms per call (much less tiles to render)

combine the upper tile/lower tile algorith?
add methods to render list from game object?

fullscreen mode?
	get screen res, keep same ratio and create black border around rest?  Then only update to the actual playing 	area
	should also add ability to exit with escape key
	
features:
Sprites for actors
Animate actors
Weather or other visual ambient affects
Special effects (eg: add a spell cast animation, or any special animation call)
HUD

debug:
right click a tile and be able to change its tilemap index?

general todo
Documentation Documentation Documentation
all size variables named including pixel or tile ("<var>_px" or "<var>_tile")
need to seperate out some of the parameters and name them, rather then lists and sublists (eg scroll speed)

buttomap
	the button map should reference the actual keys, which get mapped to specific behaviors

BUG:
default action trying to access depcrecated levelLayout Object

should gameCamera just be in renderer?
	cleanup camera references

SOFTWARE DESIGN
use packages to organize modules?
Write down algorithm for rendering scenery somewhere!
In Panorama render: Var Names - need better names for each variable.  Can some of the calculations be optimized?  
Should the camera tile and offset be class fields for Renderer? 
sound logging/error checking is overboard, proably don't need now that things are working well.  
  (Assume the API is correctly used by the programmer, and trust to the unit tests?) 

RENDER
make renderLevel (render menu, cutscene, etc) their own methods.  Set the game.render method
on a load (removes a branch from render, cleans up code)
	can make seperate functions for whether tiles/panoramas are animated, then upate the refernece in render
	when loading a level - cleans up code and removes some branches during render()

TESTING:
Render changed may have bugs not uncovered (like the overshoot/negative bug).  investigate
Put print statements in loops to ensure not rendering more than necessary panoramas or tiles
Experiment with smaller screen size, number of layers, etc. for speed/performance. 
Need to eventually figure out better unit testing

OPTIMIZATION
use c types with numpy to create surfaces to blit?
PRAMS all integers not strings
can have pygame only get() relevant (chosen) events from the queue
For display.update, ifpassing recs, will not update entire screen (eg for render changed?) - seems to work fine
For the EventHandler dictionary, use a tuple and index into it by int (not a dict with string) 

ACTORS
Render an actor if onscreen only
Render all actors should include the actors and the scenery images to render.  These must be sorted on Y position to get proper layering when rendering
	will need to think of a good way to sort these optimally, or will impact performance
	

TOOLS
GIMP - learn mainly for transparency effect, then try to put in with transparency to pygame

HUD
Need a hud
Menus
Text Boxes (pygame tutorial has something on this)

EVENTS
on a load level event, need to flush the event queue to prefent incorrect events from running
create an event type EventList which adds a list of events to the queue
create an event type flush queue which removes any remaining events from the queue (fix the menu bug when transitioning)
how to change tiles based on events (e.g. pull a switch to open a door)
how to have events spaced out over frames, or timed?
-NPC's and objects which can be interacted with
-how to repeate an ambiant track?